cmake_minimum_required(VERSION 3.14)
project(ph_test)
set(CMAKE_CXX_STANDARD 17)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")

set(BUILD_TARGET "Test" CACHE STRING "Build test")

if (${BUILD_TARGET} STREQUAL "Viper")
	message(STATUS "Viper")
	add_executable(test test/test.cc)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DBUILD_Viper")
	target_include_directories(test PUBLIC viper/)
#	target_link_libraries(ph_test PUBLIC viper/concurrentqueue)
	target_include_directories(test PUBLIC viper/concurrentqueue-src)
	target_compile_options(test PUBLIC -march=native -mclwb)
	target_compile_options(test PUBLIC -O3 -Ofast -mtune=native)
	target_link_libraries(test PUBLIC -lpmem)
endif()

if (${BUILD_TARGET} STREQUAL "PH")
	message(STATUS "PH")
	add_executable(test test/test.cc ph/global.cpp ph/data.cpp ph/hash.cpp ph/query.cpp ph/thread.cpp ph/cceh.cpp)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DBUILD_PH")
	target_include_directories(test PUBLIC ph/)
	target_compile_options(test PUBLIC -march=native)
	target_compile_options(test PUBLIC -O3 -Ofast -mtune=native)
	target_link_libraries(test PUBLIC -lpmem)
endif()

if (${BUILD_TARGET} STREQUAL "PMEM-ROCKSDB")
	message(STATUS "PMEM_ROCKSDB")
	add_executable(test test/test.cc)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DBUILD_PMEMROCKSDB -DON_DCPMM")
	target_include_directories(test PUBLIC pmem-rocksdb/)
	target_compile_options(test PUBLIC -march=native)
	target_compile_options(test PUBLIC -O3 -Ofast -mtune=native)
	target_link_libraries(test PUBLIC -lrocksdb -lpmem -lpmemobj -ldl -lsnappy -lz -lzstd -lbz2 -llz4)
endif()

if (${BUILD_TARGET} STREQUAL "PACMAN")
	message(STATUS "PACMAN")
	add_executable(test test/test.cc)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DBUILD_PACKMAN")
	target_include_directories(test PUBLIC pacman/)
	target_compile_options(test PUBLIC -march=native)
	target_compile_options(test PUBLIC -O3 -Ofast -mtune=native)

endif()
